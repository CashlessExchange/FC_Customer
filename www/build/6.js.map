{"version":3,"sources":["../../src/pages/paymethods/paymethods.module.ts","../../src/pages/paymethods/paymethods.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACF;AAU9C,IAAa,oBAAoB,GAAjC;CAAoC;AAAvB,oBAAoB;IARhC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,mEAAc;SACf;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,mEAAc,CAAC;SACzC;KACF,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AAC6C;AAC9C;AACH;AAC0C;AAC9B;AAEM;AAQxD,IAAa,cAAc,GAA3B;IAQE,YAAmB,WAA8B,EAAU,UAA8B,EAAU,WAAuB,EAAS,OAAe,EAAS,OAAsB,EAAS,SAAoB,EAAS,gBAA4B;QAAhO,gBAAW,GAAX,WAAW,CAAmB;QAAU,eAAU,GAAV,UAAU,CAAoB;QAAU,gBAAW,GAAX,WAAW,CAAY;QAAS,YAAO,GAAP,OAAO,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,qBAAgB,GAAhB,gBAAgB,CAAY;QAPnP,gBAAW,GAAO,EAAE,CAAC;QACrB,WAAM,GAAU,EAAE,CAAC;QAOnB,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;IACpB,CAAC;IAEK,gBAAgB;;YACpB,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;YACpB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACtC,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE;;;;aAIF;aACR,CAAC,CAAC;YAEH,mEAAmE;YACnE,sBAAsB;YACtB,sBAAsB;YACtB,KAAK;YACL,mDAAmD;YACnD,yBAAyB;YACzB,KAAK;YACL,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,MAAM,IAAI,CAAC,SAAS,EAAE;YAEtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAG,SAAS,CAAC,EAAC;gBAGnD,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBAE9B,IAAI,KAAK,GAAE;wBACT,QAAQ,EAAC,sBAAsB;wBAC/B,WAAW,EAAC,kBAAkB;wBAC9B,OAAO,EAAC,KAAK;qBACd,CAAC;oBAEF,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ;wBAC/D,IAAI,SAAa,CAAC;wBAClB,OAAO,CAAC,GAAG,CAAC,OAAO,GAAC,QAAQ,CAAC,CAAC;wBAC9B,SAAS,GAAC,QAAQ,CAAC;wBACnB,EAAE,EAAC,SAAS,CAAC,OAAO,KAAI,KAAO,CAAC,EAAC;4BAC/B,KAAK,CAAC,OAAO,CAAC,CAAC;wBACjB,CAAC;wBAAA,IAAI,EAAC;4BAEJ,yBAAyB;4BACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAC3B,IAAI,CAAC,IAAI,GAAC;gCACR,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACzB,SAAS,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAC1B,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAC3B,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACtB,IAAI,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACrB,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAC3B,IAAI,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACrB,KAAK,EAAC,KAAK;6BAEZ;4BAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;4BAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACjC,+BAA+B;wBACjC,CAAC;oBACH,CAAC,CAAC,CAAE;gBAEN,CAAC;YACH,CAAC;YACD,UAAU,CAAC;gBACT,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,EAAE,CAAC,CAAC,CAAC;QAGN,CAAC;KAAA;IAEK,SAAS;;YAET,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;gBAC1C,EAAE,EAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,CAAC,EAAC;oBACpC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;gBACvB,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,aAAa,GAAC,EAAC,QAAQ,EAAC,aAAa;gBACzC,QAAQ,EAAC,UAAU;gBACnB,SAAS,EAAC,EAAE;gBACZ,UAAU,EAAC,IAAI,CAAC,UAAU;gBAC1B,KAAK,EAAC,EAAE,EAAC,CAAC;YACV,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE3B,IAAI,MAAM,GAAO,MAAM,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,aAAa,EAAC,YAAY,GAAC,IAAI,CAAC,CAAC;YAC3F,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC,OAAO,CAAC;QAC7B,CAAC;KAAA;IAEL,QAAQ,CAAC,KAAK;QAEZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wEAAY,EAAC,EAAC,IAAI,EAAC,KAAK,EAAC,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,IAAI,MAAM,GAAG,SAAS,CAAC;QACvB,IAAI,OAAO,GAAE,KAAK,CAAC,MAAM,CAAC;QAC1B,MAAM,CAAC,MAAM,GAAC,KAAK,CAAC,SAAS,CAAC,OAAO,GAAC,CAAC,EAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,+DAAS,CAAC,CAAC;IAC/B,CAAC;CAEF;AAvHY,cAAc;IAL1B,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;OACG;KAC/B,CAAC;mBASmP;AA+GpP;SAvHY,cAAc,e","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PaymethodsPage } from './paymethods';\n\n@NgModule({\n  declarations: [\n    PaymethodsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PaymethodsPage),\n  ],\n})\nexport class PaymethodsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/paymethods/paymethods.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport {CardsPage} from '../cards/cards';\nimport {Storage}from '@ionic/Storage';\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\nimport {EditcardPage} from '../editcard/editcard';\n\nimport {CardService} from '../../services/card.service';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-paymethods',\n  templateUrl: 'paymethods.html',\n})\nexport class PaymethodsPage {\n  cardsonpage:any[]=[];\n  tokens:string[]=[];\n  splitted:string[];\n  customerid:string;\n  //private cardsonpage:{cardname:string,cardowner:string,cardnumber:string,month:string,year:string,checkdigit:string,icon:string}[] =[];\n  card:{cardname:string,cardowner:string,cardnumber:string,month:string,year:string,checkdigit:string,icon:string,token:string};\n\n  constructor(public loadingCtrl: LoadingController, private autService:AuthServiceProvider, private cardService:CardService, public storage:Storage, public navCtrl: NavController, public navParams: NavParams,private cardsfromservice:CardService) {\n  this.cardsonpage=[];\n  }\n\n  async ionViewWillEnter(){\n    this.cardsonpage=[];\n    const loading = this.loadingCtrl.create({\n      spinner: 'hide',\n      content: `Please Wait..\n      \n      <div class=\"custom-spinner-container\">\n        <div class=\"custom-spinner-box\"></div>\n      </div>`\n    });\n    \n    //this.cardsonpage = await this.storage.get('card1').then((data)=>{\n    //  console.log(data);\n    //  return data.cards;\n    //});\n    //await this.cardService.getCards().then((cards)=>{\n    //  this.tokens =  cards;\n    //});\n    loading.present();\n    await this.loadCards()\n\n    console.log(this.tokens);\n    if(this.tokens != null && this.tokens!= undefined){\n\n    \n    for (let entry of this.tokens) {\n\n      let token ={\n        \"APIKey\":\"bDjnJKu7ip7097Vfq46I\",\n        \"TokenExID\":\"4323829200543105\",\n        \"Token\":entry\n      };\n\n      await this.autService.tokenize(token,\"Detokenize\").then((response) =>{\n        let responses:any;\n        console.log(\"test!\"+response);\n        responses=response;\n        if(responses.Success ===false  ){\n          alert(\"error\");\n        }else{\n  \n          //alert(responses.Value);\n          this.splitted = responses.Value.split(\"-\");\n          console.log(this.splitted);\n          this.card={\n            cardname:this.splitted[0],\n            cardowner:this.splitted[1],\n            cardnumber:this.splitted[2],\n            month:this.splitted[3],\n            year:this.splitted[4],\n            checkdigit:this.splitted[5],\n            icon:this.splitted[6],\n            token:entry\n\n          }\n          \n          console.log(this.splitted);\n          this.cardsonpage.push(this.card);\n          //this.token = responses.Token;\n        }\n      }) ;\n\n    }\n  }\n  setTimeout(() => {\n    loading.dismiss();\n  }, 0);\n\n    \n  }\n\n  async loadCards(){\n    \n        await this.storage.get('user-id').then((data) =>{\n          if(data != null && data != undefined){\n            this.customerid=data;                    \n          }\n        });\n    \n        let databasecreds={username:\"freedom-pos\",\n        password:\"150498AV\",\n        reference:\"\",\n        customerid:this.customerid,\n        token:\"\"};\n        console.log(databasecreds);\n    \n        let certis:any = await this.autService.serviceTransaction(databasecreds,\"?getCards=\"+\"99\");\n        console.log(certis.results);\n        this.tokens=certis.results;\n      }\n\n  editCard(value){\n\n    console.log(value);\n    this.navCtrl.push(EditcardPage,{card:value});\n  }\n\n  filter(value:string){\n    let secret = \"*******\";\n    let endcard= value.length;\n    return secret+value.substring(endcard-3,endcard);\n  }\n\n  addCard(){\n    this.navCtrl.push(CardsPage);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/paymethods/paymethods.ts"],"sourceRoot":""}