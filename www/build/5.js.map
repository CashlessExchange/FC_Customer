{"version":3,"sources":["../../src/pages/signupsumnocard/signupsumnocard.module.ts","../../src/pages/signupsumnocard/signupsumnocard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACQ;AAUxD,IAAa,yBAAyB;IAAtC;IAAwC,CAAC;IAAD,gCAAC;AAAD,CAAC;AAA5B,yBAAyB;IARrC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6EAAmB;SACpB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,6EAAmB,CAAC;SAC9C;KACF,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZI;AACa;AAE6B;AACtC;AACe;AAEZ;AAEjD;;;;;GAKG;AAOH,IAAa,mBAAmB;IAsC9B,6BAAoB,QAAkB,EAC7B,OAAsB,EACrB,IAAU,EACV,UAAe,EAChB,OAAsB,EACrB,SAA0B,EAC3B,SAAoB,EACpB,gBAAkC;QAP3C,iBAaC;QAbmB,aAAQ,GAAR,QAAQ,CAAU;QAC7B,YAAO,GAAP,OAAO,CAAe;QACrB,SAAI,GAAJ,IAAI,CAAM;QACV,eAAU,GAAV,UAAU,CAAK;QAChB,YAAO,GAAP,OAAO,CAAe;QACrB,cAAS,GAAT,SAAS,CAAiB;QAC3B,cAAS,GAAT,SAAS,CAAW;QACpB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAvC3C,YAAO,GAYH;YACA,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,EAAE;YACb,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE,MAAM;YAClB,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,MAAM;YACZ,GAAG,EAAE,MAAM;SACZ,CAAC;QAgBF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACxD,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;IAEK,sCAAQ,GAAd;;;gBAGM,KAAK,EAML,IAAI,EAUJ,KAAK;;wBAhBG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,IAAI,CAAC,iBAAiB;oBAC/B,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,KAAK;iBAChB,CAAC;uBAEiB,yBAAyB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;sBAC7D,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;sBAChC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;sBACpC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;sBAC9B,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;sBAC/B,aAAa,GAAG,MAAM;sBACtB,eAAe,GAAG,MAAM;sBACxB,gBAAgB,GAAG,MAAM;sBACzB,eAAe,GAAG,MAAM;sBACxB,OAAO,GAAG,MAAM;wBAShB;oBACA,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;oBACjC,UAAU,EAAE,IAAI,CAAC,KAAK;oBACtB,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;oBACzB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;oBACvB,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;oBAC5B,IAAI,EAAE,EAAE;iBACT;gBACH,yHAAyH;gBACzH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oBACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAElB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,uCAAuC,CAAC,CAAC,CAAC;wBACnF,KAAK,CAAC,UAAU,CAAC,kCAAkC,CAAC,CAAC;wBACrD,KAAK,CAAC,OAAO,EAAE,CAAC;oBAClB,CAAC;oBAAC,IAAI,CACJ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,gCAAgC,CAAC,CAAC,CAAC;wBAC5E,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;wBACzB,KAAK,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;wBAC9C,KAAK,CAAC,OAAO,EAAE,CAAC;oBAElB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAK,CAAC,UAAU,CAAC,iEAAiE,CAAC,CAAC;wBACpF,KAAK,CAAC,OAAO,EAAE,CAAC;oBAElB,CAAC;gBAEL,CAAC,EAAE,UAAC,GAAG;oBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAEjB,2BAA2B;oBAC3B,KAAK,CAAC,OAAO,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC;;;;KAGJ;IAEK,qCAAO,GAAb,UAAc,IAQb;;;gBAIK,SAAS,EAiCT,KAAK,EAmBL,IAAI;;;;wBArDR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oCACX,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;wBACjE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;wBACvB,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;4BAClB,KAAK,iBAAiB,EAAE,CAAC;gCACvB,IAAI,CAAC,IAAI,GAAG,gCAAgC,CAAC;gCAC7C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gCACvB,KAAK,CAAC;4BACR,CAAC;4BACD,KAAK,UAAU,EAAE,CAAC;gCAChB,IAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC;gCACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gCACvB,cAAc;gCACd,KAAK,CAAC;4BACR,CAAC;4BACD,KAAK,YAAY,EAAE,CAAC;gCAClB,IAAI,CAAC,IAAI,GAAG,2BAA2B,CAAC;gCACxC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gCACvB,cAAc;gCACd,KAAK,CAAC;4BACR,CAAC;4BACD,KAAK,MAAM,EAAE,CAAC;gCACZ,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;gCAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gCACvB,cAAc;gCACd,KAAK,CAAC;4BACR,CAAC;4BACD,SAAS,CAAC;gCACR,cAAc;gCACd,KAAK,CAAC;4BACR,CAAC;wBACH,CAAC;gCAYC;4BACE,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,UAAU,EAAE,IAAI,CAAC,KAAK;4BACtB,KAAK,EAAE,IAAI,CAAC,KAAK;4BACjB,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,UAAU,EAAE,IAAI,CAAC,UAAU;4BAC3B,IAAI,EAAE,IAAI,CAAC,IAAI;yBAChB;+BAEQ,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;wBACzF,qBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gCAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,eAAe,CAAC,CAAC,CAAC;oCAC3D,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;oCAClC,IAAI,aAAa,GAAG;wCAClB,QAAQ,EAAE,aAAa;wCACvB,QAAQ,EAAE,UAAU;wCACpB,SAAS,EAAE,EAAE;wCACb,UAAU,EAAE,IAAI,CAAC,UAAU;wCAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;wCAC3C,UAAU,EAAE,IAAI,CAAC,SAAS;wCAC1B,aAAa,EAAE,KAAI,CAAC,KAAK;wCACzB,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;wCAC3C,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;wCACzC,GAAG,EAAE,IAAI,CAAC,UAAU;wCACpB,IAAI,EAAE,IAAI,CAAC,IAAI;qCAChB,CAAC;oCACF,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oCAE3B,IAAI,MAAM,GAAQ,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,GAAG,IAAI,CAAC,CAAC;oCACjF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oCAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;wCAChC,KAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;wCAC3B,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;oCAC3B,CAAC;gCAEH,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACN,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;wCAChC,OAAO,EAAE,uBAAuB;wCAChC,QAAQ,EAAE,IAAI;wCACd,QAAQ,EAAE,KAAK;qCAChB,CAAC,CAAC;oCACH,KAAK,CAAC,OAAO,EAAE,CAAC;gCAClB,CAAC;4BAEH,CAAC,CAAC;;wBAnCF,SAmCE,CAAC;;;;;KAEJ;IAEH,0BAAC;AAAD,CAAC;AAnOY,mBAAmB;IAJ/B,wEAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;OACG;KACpC,CAAC;6EAuCsC;QACpB,mEAAa;QACf,gEAAI;QACE,mFAAG;QACP,sEAAa;QACV,iEAAe;QAChB,6EAAS;QACF,gBAAgB;AAsL5C;SAnOY,mBAAmB,e","file":"5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SignupsumnocardPage } from './signupsumnocard';\n\n@NgModule({\n  declarations: [\n    SignupsumnocardPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignupsumnocardPage),\n  ],\n})\nexport class SignupsumnocardPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signupsumnocard/signupsumnocard.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IonicPage, NavController, NavParams, ToastController, Platform } from 'ionic-angular';\nimport { Api } from '../../providers/api/api';\nimport { NativeStorage } from '@ionic-native/native-storage';\n\nimport { User } from '../../providers/providers';\n\n/**\n * Generated class for the Signup3Page page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-signupsumnocard',\n  templateUrl: 'signupsumnocard.html',\n})\nexport class SignupsumnocardPage {\n\n\n  private customerid: string;\n\n  private token: string;\n  account: {\n    name: string,\n    cardowner: string,\n    email: string,\n    password: string,\n    phone: string,\n    city: string,\n    cardtype: string,\n    cardnumber: string,\n    month: string,\n    year: string,\n    cvv: string\n  } = {\n      name: '',\n      cardowner: '',\n      email: '',\n      password: '',\n      phone: '',\n      city: '',\n      cardtype: 'null',\n      cardnumber: 'null',\n      month: 'null',\n      year: 'null',\n      cvv: 'null'\n    };\n\n  private responseData: any;\n\n\n  // Our translated text strings\n  private signupErrorString: string;\n\n  constructor(private platform: Platform,\n    public navCtrl: NavController,\n    private user: User,\n    private autService: Api,\n    public storage: NativeStorage,\n    private toastCtrl: ToastController,\n    public navParams: NavParams,\n    public translateService: TranslateService) {\n    this.account = this.navParams.get(\"paramsReg\");\n    console.log(this.account);\n    this.translateService.get('SIGNUP_ERROR').subscribe((value) => {\n      this.signupErrorString = value;\n    })\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Signup3Page');\n  }\n\n  async doSignup() {\n\n    // Unable to sign up\n    let toast = this.toastCtrl.create({\n      message: this.signupErrorString,\n      duration: 3000,\n      position: 'top'\n    });\n\n    let type: string = \"registration.php?email=\" + this.account.email\n      + \"&username=\" + this.account.name\n      + \"&password=\" + this.account.password\n      + \"&phone=\" + this.account.phone\n      + \"&city_id=\" + this.account.city\n      + \"&card_type=\" + 'None'\n      + \"&card_number=\" + 'None'\n      + \"&expiry_month=\" + 'None'\n      + \"&expiry_year=\" + 'None'\n      + \"&cvv=\" + 'None'\n    let cardo: {\n      cardname: string,\n      cardowner: string,\n      cardnumber: string,\n      month: string,\n      year: string,\n      checkdigit: string,\n      icon: string\n    } = {\n        cardname: \"\",\n        cardowner: this.account.cardowner,\n        cardnumber: this.token,\n        month: this.account.month,\n        year: this.account.year,\n        checkdigit: this.account.cvv,\n        icon: \"\"\n      }\n    //this.responseData = await this.user.serviceFreedom(JSON.stringify({ message: \"Freedom Choice App is calling\" }), type);\n    console.log('inMEthods');\n    this.user.login(this.account, type).subscribe((resp: any) => {\n      console.log(resp);\n\n      if (resp.success === 0 && resp.message === \"Duplicate email or Duplicate username\") {\n        toast.setMessage(\"Email or Username already in use\");\n        toast.present();\n      } else\n        if (resp.success === 1 && resp.message === \"Registration done successfully\") {\n          this.navCtrl.popToRoot();\n          toast.setMessage(\"Registration Successfully\");\n          toast.present();\n\n        } else {\n          toast.setMessage(\"Error in Registration - Please check your data and try it later\");\n          toast.present();\n\n        }\n\n    }, (err) => {\n      console.log(err);\n      \n      //this.navCtrl.popToRoot();\n      toast.present();\n    });\n\n\n  }\n\n  async addCard(card: {\n    cardname: string,\n    cardowner: string,\n    cardnumber: string,\n    month: string,\n    year: string,\n    checkdigit: string,\n    icon: string\n  }) {\n\n\n    console.log(this.account.cardtype);\n    let splitter1: string = this.account.cardtype.replace(/\\s+/g, '');\n    console.log(splitter1);\n    switch (splitter1) {\n      case \"AmericanExpress\": {\n        card.icon = \"assets/img/americanexpress.png\";\n        card.cardname = \"amex\";\n        break;\n      }\n      case \"Discover\": {\n        card.icon = \"assets/img/discover.png\";\n        card.cardname = \"disc\";\n        //statements; \n        break;\n      }\n      case \"Mastercard\": {\n        card.icon = \"assets/img/mastercard.png\";\n        card.cardname = \"mast\";\n        //statements; \n        break;\n      }\n      case \"Visa\": {\n        card.icon = \"assets/img/visa.png\";\n        card.cardname = \"visa\";\n        //statements; \n        break;\n      }\n      default: {\n        //statements; \n        break;\n      }\n    }\n\n\n    let cardo: {\n      cardname: string,\n      cardowner: string,\n      cardnumber: string,\n      month: string,\n      year: string,\n      checkdigit: string,\n      icon: string\n    } =\n      {\n        cardname: card.cardname,\n        cardowner: card.cardowner,\n        cardnumber: this.token,\n        month: card.month,\n        year: card.year,\n        checkdigit: card.checkdigit,\n        icon: card.icon\n      };\n\n    let type = \"login.php?email=\" + this.account.email + \"&password=\" + this.account.password;\n    await this.user.login(this.account, type).subscribe((resp: any) => {\n\n      if (resp.success === 1 && resp.message === \"login success\") {\n        this.customerid = resp.customerid;\n        let databasecreds = {\n          username: \"freedom-pos\",\n          password: \"150498AV\",\n          reference: \"\",\n          customerid: resp.customerid,\n          cardtype: card.cardname.replace(/\\s+/g, ''),\n          nameoncard: card.cardowner,\n          accountnumber: this.token,\n          expiremonth: card.month.replace(/\\s+/g, ''),\n          expireyear: card.year.replace(/\\s+/g, ''),\n          cvv: card.checkdigit,\n          icon: card.icon\n        };\n        console.log(databasecreds);\n\n        let certis: any = this.autService.cardService(databasecreds, \"?addCard=\" + \"99\");\n        console.log(certis.result);\n        if (certis.result === \"success\") {\n          this.navCtrl.getPrevious();\n          this.navCtrl.popToRoot();\n        }\n\n      } else {\n        let toast = this.toastCtrl.create({\n          message: \"Error in Registration\",\n          duration: 3000,\n          position: 'top'\n        });\n        toast.present();\n      }\n\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signupsumnocard/signupsumnocard.ts"],"sourceRoot":""}